name: Auto-merge PRs from private fork into public repo

# Trigger on new issue comments
on:
  issue_comment:
    types: [created]

jobs:
  merge_pr:
    # Only run on PR comments by maintainer that say exactly 'merge'
    if: >
      github.event.issue.pull_request != null &&
      (github.event.comment.body == 'merge' || github.event.comment.body == 'Merge' || github.event.comment.body == 'MERGE') &&
      github.event.comment.user.login == 'arianabuilds'
    runs-on: ubuntu-latest
    steps:
      - name: Debug Variables
        run: |
          echo "PR number: #${{ github.event.issue.number }}"
          # Confirm our tokens are set
          if [ -z "${{ secrets.UPSTREAM_REPO_TOKEN }}" ]; then echo "⚠️ UPSTREAM_REPO_TOKEN is NOT set"; else echo "✓ UPSTREAM_REPO_TOKEN is set"; fi
          if [ -z "${{ secrets.PRIVATE_REPO_TOKEN }}" ]; then echo "⚠️ PRIVATE_REPO_TOKEN is NOT set"; else echo "✓ PRIVATE_REPO_TOKEN is set"; fi

      - name: 1. Get PR branch
        id: get_pr
        run: |
          # Fetch PR details from GitHub API to get the branch name
          PR_DATA=$(curl -s -H "Authorization: token ${{ secrets.PRIVATE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}")
          PR_BRANCH=$(echo "$PR_DATA" | jq -r .head.ref)
          echo "Found PR branch: $PR_BRANCH"
          echo "branch=$PR_BRANCH" >> $GITHUB_OUTPUT

      - name: 2. Checkout Public Upstream Repository
        uses: actions/checkout@v3
        with:
          repository: arianabuilds/blowjobchain-web
          ref: main
          token: ${{ secrets.UPSTREAM_REPO_TOKEN }}
          path: upstream
          fetch-depth: 0 # Fetch full history to allow merging

      - name: 3. Checkout Private Fork PR branch
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ steps.get_pr.outputs.branch }}
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          path: pato
          fetch-depth: 0 # Fetch full history to allow merging

      - name: 4. Merge PR branch into upstream/main
        run: |
          cd upstream
          git config user.name "ariana-via-gh-action"
          git config user.email "arianabuilds[bot]@users.noreply.github.com"

          # Add the private clone as a remote (pointing to the local folder)
          git remote add pato ../pato
          git fetch pato

          # Merge the PR branch and push to upstream
          git merge pato/HEAD -m "Merge PR #${{ github.event.issue.number }} from pato/${{ steps.get_pr.outputs.branch }}"
          git push origin main

      - name: Comment on PR with Job Status
        if: !cancelled()
        run: |
          FOOTNOTE="\n\n---\n<sub>*Status update from Auto-merge action*</sub>"
          LOGS_LINK="[action logs](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID})"

          if [ "${{ job.status }}" = "success" ]; then
            COMMENT="✅ Upstream merge successful. ${LOGS_LINK}${FOOTNOTE}"
          else
            COMMENT="❌ Upstream merge failed. See ${LOGS_LINK} for details.${FOOTNOTE}"
          fi

          curl -s -X POST \
            -H "Authorization: token ${{ secrets.PRIVATE_REPO_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments" \
            -d "{\"body\":\"$COMMENT\"}"
