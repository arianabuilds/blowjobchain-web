name: Auto-merge PRs from private fork into public repo

# Trigger on new issue comments
on:
  issue_comment:
    types: [created]

jobs:
  merge_pr:
    # Run only if:
    # - The comment is on a PR (not a regular issue)
    # - The comment text is exactly "merge" or a case-sensitive variation
    # - The comment author is the pre-defined maintainer
    if: >
      github.event.issue.pull_request != null &&
      (github.event.comment.body == 'merge' || github.event.comment.body == 'MERGE' || github.event.comment.body == 'Merge') &&
      github.event.comment.user.login == 'arianabuilds'
    runs-on: ubuntu-latest
    steps:
      - name: Debug Variables
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Event Issue PR head ref: ${{ github.event.issue.pull_request.head.ref }}"
          echo "Comment Body: ${{ github.event.comment.body }}"
          echo "Comment User Login: ${{ github.event.comment.user.login }}"
          # Check if tokens are non-empty (will print masked values if set)
          if [ -z "${{ secrets.UPSTREAM_REPO_TOKEN }}" ]; then echo "UPSTREAM_REPO_TOKEN is NOT set"; else echo "UPSTREAM_REPO_TOKEN is set"; fi
          if [ -z "${{ secrets.PRIVATE_REPO_TOKEN }}" ]; then echo "PRIVATE_REPO_TOKEN is NOT set"; else echo "PRIVATE_REPO_TOKEN is set"; fi

      - name: 1. Checkout Public Upstream Repository
        uses: actions/checkout@v3
        with:
          repository: arianabuilds/blowjobchain-web
          token: ${{ secrets.UPSTREAM_REPO_TOKEN }}
          fetch-depth: 0 # Fetch full history to allow merging

      - name: 2. Add Private Fork as Remote
        run: git remote add pato "https://x-access-token:${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/${{ github.repository }}.git"

      - name: 3. Fetch branches from private fork
        run: git fetch pato

      - name: 4. Checkout main branch of upstream repository
        run: git checkout main

      - name: 5. Merge PR branch from private fork into main (using PR event data)
        run: |
          pr_branch="${{ github.event.issue.pull_request.head.ref }}"
          pr_number="${{ github.event.issue.number }}"
          git merge pato/${pr_branch} -m "Merge pull request #${pr_number} from pato/${pr_branch}"

      - name: 6. Push updated main branch back to public repository
        run: git push origin main
