diff --git a/node_modules/@supabase/auth-js/dist/main/GoTrueClient.js b/node_modules/@supabase/auth-js/dist/main/GoTrueClient.js
index 11125ff..faab9be 100644
--- a/node_modules/@supabase/auth-js/dist/main/GoTrueClient.js
+++ b/node_modules/@supabase/auth-js/dist/main/GoTrueClient.js
@@ -828,7 +828,7 @@ class GoTrueClient {
                         get(target, prop, receiver) {
                             if (!suppressWarning && prop === 'user') {
                                 // only show warning when the user object is being accessed from the server
-                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');
+                                console.warn('auth-js/dist/main/GoTruthClient.js: Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');
                             }
                             return Reflect.get(target, prop, receiver);
                         },
diff --git a/node_modules/@supabase/auth-js/dist/module/GoTrueClient.js b/node_modules/@supabase/auth-js/dist/module/GoTrueClient.js
index 353bee1..326fe00 100644
--- a/node_modules/@supabase/auth-js/dist/module/GoTrueClient.js
+++ b/node_modules/@supabase/auth-js/dist/module/GoTrueClient.js
@@ -823,7 +823,9 @@ export default class GoTrueClient {
                         get(target, prop, receiver) {
                             if (!suppressWarning && prop === 'user') {
                                 // only show warning when the user object is being accessed from the server
-                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');
+
+                                // Disabled via patch-package
+                                // console.warn('auth-js/dist/module/GoTrueClient.js: Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');
                             }
                             return Reflect.get(target, prop, receiver);
                         },
diff --git a/node_modules/@supabase/auth-js/src/GoTrueClient.ts b/node_modules/@supabase/auth-js/src/GoTrueClient.ts
index 88bedad..bece058 100644
--- a/node_modules/@supabase/auth-js/src/GoTrueClient.ts
+++ b/node_modules/@supabase/auth-js/src/GoTrueClient.ts
@@ -1119,7 +1119,7 @@ export default class GoTrueClient {
               if (!suppressWarning && prop === 'user') {
                 // only show warning when the user object is being accessed from the server
                 console.warn(
-                  'Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.'
+                  'auth-js/src/GoTrueClient.ts: Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.'
                 )
               }
               return Reflect.get(target, prop, receiver)
